#!/usr/bin/env python
import sys
import argparse


def after(lines, pattern):
    found = False
    for line in lines:
        if found:
            yield line
        elif pattern in line:
            found = True


def after_last(lines, pattern):
    cache = []
    for line in lines:
        cache.append(line)
        if pattern in line:
            cache = []
    for line in cache:
        yield line


def main():
    parser = argparse.ArgumentParser(
        description='Print all lines after the occurrence of "pattern" in a file or /dev/stdin',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--last', action='store_true',
                        help='Only print lines after the last occurrence of "pattern" '
                             '(potentially requires buffering the entire file)')
    parser.add_argument('pattern',
                        help='Fixed string pattern to search for')
    parser.add_argument('files', nargs='*', type=argparse.FileType('r'), default=[sys.stdin],
                        help='Input file(s)')
    opts = parser.parse_args()

    after_func = after_last if opts.last else after
    for line in after_func((line for file in opts.files for line in file), opts.pattern):
        print(line, end='')


if __name__ == '__main__':
    exit(main())
