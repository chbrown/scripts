#!/usr/bin/env python
import mailbox
# import email
import tempfile

import logging
logger = logging.getLogger(__name__)


def attachments(message, content_type='application/pdf'):
    assert message.is_multipart(), 'Cannot get attachments from a non-multipart message'
    for payload in message.get_payload():
        # payload should be an email.message.Message instance
        if payload.get_content_type() == content_type:
            logger.info('filename: %s', payload.get_filename())
            _, tempfile_path = tempfile.mkstemp()
            body = payload.get_payload(decode=True)
            with open(tempfile_path, 'wb') as tempfile_fd:
                tempfile_fd.write(body)
            logger.info('saved in local tempfile: %s', tempfile_path)


def ls(parser):
    opts = parser.parse_args()

    mbox = mailbox.mbox(opts.input, factory=None, create=False)
    logger.info('mbox length: %d', len(mbox))
    # import itertools
    # ten = list(itertools.islice(mbox, 10))

    for i, message in enumerate(mbox):
        subject = message['subject'] or ''
        logger.info('#%4d: %s', i, subject)

    attachments(message)


actions = dict(ls=ls)


def main():
    import argparse

    parser = argparse.ArgumentParser(description='MBOX file manipulation',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('action', choices=actions, help='Action to take')
    # I/O
    # parser.add_argument('--input', nargs='?', type=argparse.FileType('r'), default=sys.stdin,
    #     help='mbox path (defaults to STDIN)')
    parser.add_argument('--input', type=str, required=True, help='mbox path')
    parser.add_argument('--output', type=str, help='Output destination')
    parser.add_argument('--verbose', action='store_true',
        help='print extra output to STDERR')
    opts, _ = parser.parse_known_args()

    level = logging.DEBUG if opts.verbose else logging.INFO
    logging.basicConfig(level=level)

    actions[opts.action](parser)


if __name__ == '__main__':
    main()
