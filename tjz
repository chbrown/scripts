#!/usr/bin/env bash

set -e # exit on first command that fails

usage() {
  >&2 cat <<HELP
Usage: tjz penn-treebank-rel3/

Tarball and bzip2-compress the given directory into a [basename].tar.bz2
archive, then move the original directory into TMPDIR.
HELP
}

while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help)
      usage
      exit 0
      ;;
    *)
      if [[ -z ${original+missing} ]]; then
        # original hasn't been set yet; set it while removing
        # the trailing slash (hopefully there's only one)
        original=${1%/}
      else
        usage
        >&2 printf '\nToo many arguments: "%s"\n' "$1"
        exit 1
      fi
      ;;
  esac
  shift
done

move() {
  # if 'link' fails (e.g., due to a 'Cross-device link' error), fall back to 'mv'
  if link "$1" "$2"; then
    unlink "$1"
  else
    mv "$1" "$2"
  fi
}

# check that the given filepath exists
if [[ ! -e "$original" ]]; then
  >&2 printf '"%s" does not exist.\n' "$original"
  exit 1
fi
# check that it's a directory
if [[ ! -d "$original" ]]; then
  >&2 printf '"%s" is not a directory.\n' "$original"
  exit 1
fi
# check that the eventual output does not exist
tarball=$original.tar.bz2
if [[ -e "$tarball" ]]; then
  >&2 printf '"%s" already exists; not overwriting.\n' "$tarball"
  exit 1
fi

name="$(basename "$original")"
# write to a temporary .tar.bz2 file first
tmp_tar_bz2=${TMPDIR-/tmp/}$name.tar.bz2
# COPYFILE_DISABLE=1 ignores extended attributes (xattr) on Mac OS X
# -C treats the parent directory as the path context
COPYFILE_DISABLE=1 tar -cjf "$tmp_tar_bz2" -C "$(dirname "$original")" \
  --exclude='.DS_Store' --exclude='._.DS_Store' "$name"
move "$tmp_tar_bz2" "$tarball"

# move the original to a timestamp-suffixed location in the system TMPDIR
original_trash="${TMPDIR-/tmp/}$name-$(date +%Y%m%dT%H%M%S)"
# don't use move() since $original is a directory
mv "$original" "$original_trash"

>&2 printf 'created "%s" and moved original to "%s"\n' "$tarball" "$original_trash"
