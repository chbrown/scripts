#!/usr/bin/env bash
if [[ "${@---help}" =~ '--help' ]]; then
  >&2 cat <<HELP
Usage: jqi . package.json

Like jq, but replaces the input file with jq's output. The final command line
argument should be the JSON file to overwrite, and the same arguments should,
if called with jq instead of jqi, run without error (and output to stdout).
HELP
  exit 1
fi

FILEPATH="${@: -1}"

# call with two arguments: an exit code and an error message
exit_if_nonzero() {
  if [[ $1 -ne 0 ]]; then
    >&2 printf "jqi %s: %s\n" "$FILEPATH" "$2"
    exit $1
  fi
}

if [[ ! -f "$FILEPATH" ]]; then
  exit_if_nonzero 66 "the final argument must be an existing, regular file" # EX_NOINPUT
fi

# prepare the temporary output file
TMP_FILEPATH="$(mktemp -d)/$(basename $FILEPATH)"

# run the command
jq "$@" > "$TMP_FILEPATH"
exit_if_nonzero $? "jq failure"

# backup the original file
BAK_FILEPATH="$(mktemp -d)/$(basename $FILEPATH)"
mv "$FILEPATH" "$BAK_FILEPATH"
exit_if_nonzero $? "mv failure: could not backup $FILEPATH to $BAK_FILEPATH"

# put the temporary file into the original's place
mv -n "$TMP_FILEPATH" "$FILEPATH"
exit_if_nonzero $? "mv failure: could not move $TMP_FILEPATH to $FILEPATH; recommend you restore backup version at $BAK_FILEPATH"
