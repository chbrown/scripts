#!/usr/bin/env node
const {safeDump} = require('js-yaml')
const optimist = require('optimist')

function readToEnd(stream, callback) {
  const chunks = []
  return stream
  .on('error', callback)
  .on('data', chunk => chunks.push(chunk))
  .on('end', () => callback(null, chunks))
}

function convert(inputStream, outputStream, callback) {
  readToEnd(inputStream, (err, inputChunks) => {
    if (err) return callback(err)
    const inputString = Buffer.concat(inputChunks).toString()
    const object = JSON.parse(inputString)
    const outputString = safeDump(object)
    outputStream.write(outputString, callback)
  })
}

function main() {
  const argparser = optimist
  .usage(`Usage: json2yaml < data.json

  Convert a JSON file to YAML`)
  .describe({help: 'print this help message'})
  .boolean(['help'])
  .alias({help: 'h'})

  const argv = argparser.argv

  if (argv.help) {
    argparser.showHelp()
  }
  else if (process.stdin.isTTY) {
    throw new Error('JSON must be piped in on STDIN')
  }
  else {
    convert(process.stdin, process.stdout, err => {
      if (err) throw err
    })
  }
}

if (require.main === module) {
  main()
}
