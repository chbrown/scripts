#!/usr/bin/env bash

set -e # exit on first command that fails

usage() {
  >&2 cat <<HELP
Usage: $(basename "$0") DIRPATH[/] [-k|--keep] [-p|--prefix] [-h|--help]

Tarball and bzip2-compress DIRPATH into a new file, "./DIRPATH.tar.bz2",
then remove the original directory (using 'trash' if available; otherwise,
moves the original directory into \$TMPDIR).

Options:
  -h, --help    Show this usage message
  -k, --keep    Keep (don't trash) the input directory
  -p, --prefix  Prefix the created tarball with the original directory's
                date-of-birth, using the pattern "YYYYMMDD-"
HELP
}

KEEP=false
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help)
      usage
      exit 0
      ;;
    -k|--keep)
      KEEP=true
      ;;
    -p|--prefix)
      PREFIX=%Y%m%d-
      ;;
    *)
      # check that the given filepath exists and that it's a directory
      if [[ ! -e $1 ]]; then
        >&2 printf '"%s" does not exist.\n' "$1"
        exit 1
      elif [[ ! -d $1 ]]; then
        >&2 printf '"%s" is not a directory.\n' "$1"
        exit 1
      elif [[ -z ${original+missing} ]]; then
        # original hasn't been set yet; set it while removing
        # the trailing slash (hopefully there's only one)
        original=${1%/}
      else
        usage
        >&2 printf '\nToo many arguments: "%s"\n' "$1"
        exit 1
      fi
      ;;
  esac
  shift
done

move() {
  # if 'link' fails (e.g., due to a 'Cross-device link' error), fall back to 'mv'
  if link "$1" "$2"; then
    unlink "$1"
  else
    mv "$1" "$2"
  fi
}

tarball=$original.tar.bz2
# add prefix to tarball name if PREFIX is set
if [[ ! -z ${PREFIX+missing} ]]; then
  # %B selects the birth time of the inode (file)
  # %SB specifies that the birth time should be converted to a string via the -t timefmt argument
  tarball=$(stat -f '%SB' -t "$PREFIX" "$original")$tarball
fi
# check that the eventual output does not exist
if [[ -e "$tarball" ]]; then
  >&2 printf '"%s" already exists; not overwriting.\n' "$tarball"
  exit 1
fi

name="$(basename "$original")"
# write to a temporary .tar.bz2 file first
tmp_tarball=$(mktemp -d)/$name.tar.bz2
# COPYFILE_DISABLE=1 ignores extended attributes (xattr) on Mac OS X
# -C treats the parent directory as the path context
COPYFILE_DISABLE=1 tar -cjf "$tmp_tarball" -C "$(dirname "$original")" \
  --exclude='.DS_Store' --exclude='._.DS_Store' "$name"
move "$tmp_tarball" "$tarball"
>&2 printf 'created "%s" from contents of "%s"\n' "$tarball" "$original"

if ! $KEEP; then
  # use the 'trash' command if there is one
  if command -v trash >/dev/null 2>&1; then
    >&2 printf 'trashing original...\n'
    trash -v "$original"
  else
    >&2 printf 'moving original to temporary directory...\n'
    # don't use move() since $original is a directory
    mv -v "$original" "$(mktemp -d)"
  fi
fi
