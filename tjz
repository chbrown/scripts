#!/usr/bin/env bash

set -e # exit on first command that fails

usage() {
  >&2 cat <<HELP
Usage: tjz penn-treebank-rel3/

Tarball and bzip2-compress the given directory into a [basename].tar.bz2
archive, then move the original directory into TMPDIR.
HELP
}

while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help)
      usage
      exit 0
      ;;
    *)
      if [[ -z ${original+missing} ]]; then
        # original hasn't been set yet; set it while removing
        # the trailing slash (hopefully there's only one)
        original=${1%/}
      else
        usage
        >&2 printf '\nToo many arguments: "%s"\n' "$1"
        exit 1
      fi
      ;;
  esac
  shift
done

move() {
  # if 'link' fails (e.g., due to a 'Cross-device link' error), fall back to 'mv'
  link "$1" "$2" && unlink "$1" || mv "$1" "$2"
}

# check that the given filepath exists
[ ! -e "$original" ] && >&2 printf '%s does not exist.\n' "$original" && exit 1
# check that the eventual output does not exist
[ -e "$original.tar.bz2" ] && >&2 printf '%s already exists, not overwriting.\n' "$original.tar.bz2" && exit 1

name="$(basename "$original")"
# write to a temporary .tar.bz2 file first
tmp_tar_bz2="${TMPDIR-/tmp/}$name.tar.bz2"
# COPYFILE_DISABLE=1 ignores extended attributes (xattr) on Mac OS X
# treat the parent directory as the path context
COPYFILE_DISABLE=1 tar -cjf "$tmp_tar_bz2" -C "$(dirname "$original")" \
  --exclude='.DS_Store' --exclude='._.DS_Store' "$name"
# >&2 printf 'created %s\\n' "$tmp_tar_bz2"
move "$tmp_tar_bz2" "$original.tar.bz2"

# move the original to a timestamp-suffixed location in the system TMPDIR
original_trash="${TMPDIR-/tmp/}$name-$(date +%Y%m%dT%H%M%S)"
# don't use move since $original might be (is probably) a directory
mv "$original" "$original_trash"

>&2 printf 'created %s and moved original to %s\n' "$original.tar.bz2" "$original_trash"
