#!/usr/bin/env bash

# if there are no arguments, this will default $@ to --help, so it works for all cases.
if [[ "${@---help}" =~ '--help' ]]; then
  if [[ "${@}" =~ '--help' ]]
  then
    printf "rmfile: illegal option -- -\n"
  fi
  printf "usage: rmfile file ...\n\n"
  printf "rmfile is like rmdir; it only deletes a file if the file is empty.\n"
  exit 1
fi

EXITCODE=0

function print_error {
  printf "rmfile: %s\n" "$1"
  EXITCODE=1
}

for file in "$@"; do
  # file must 1) exist, 2) be a file, and 3) be empty
  if [[ -e "$file" ]]; then
    # file exists
    if [[ -f "$file" ]]; then
      # file is a regular file
      if [[ -s "$file" ]]; then
        # file is not zero size
        print_error "$file: File not empty"
      else
        # yay, all conditions are met; delete it
        rm "$file"
        # TODO: check that rm was successful and set EXITCODE if not
      fi
    else
      print_error "$file: Not a file"
    fi
  else
    print_error "$file: No such file or directory"
  fi
done

exit $EXITCODE
