#!/usr/bin/env python
import subprocess
import argparse
from urllib.parse import urlsplit, urlunsplit


def merge_url_defaults(urlstring, default_scheme='git', default_netloc='github.com'):
    split_result = urlsplit(urlstring)
    split_with_defaults = split_result._replace(scheme=split_result.scheme or default_scheme,
                                                netloc=split_result.netloc or default_netloc)
    return urlunsplit(split_with_defaults)


def iter_remote_tags(repository):
    lines = subprocess.run(['git', 'ls-remote', '--tags', repository],
                           stdout=subprocess.PIPE,
                           stderr=subprocess.PIPE,
                           timeout=5,
                           check=True,
                           universal_newlines=True)
    for line in lines.stdout.strip().split('\n'):
        _sha, tag = line.split()
        # what are these ^{} tags? I don't need them.
        if not tag.endswith('^{}'):
            yield tag.split('/')[-1]


def main():
    parser = argparse.ArgumentParser(
        description='git-ls-remote --tags without the fluff',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('repository_url',
                        help='Git repository URL; the git: scheme and github.com hostname '
                             'are automatically added if missing')
    opts = parser.parse_args()

    repository = merge_url_defaults(opts.repository_url)
    try:
        for tag in iter_remote_tags(repository):
            print(tag)
    except subprocess.CalledProcessError as exc:
        print('Subprocess', ' '.join(exc.cmd), 'failed:')
        print('>>>', exc.stderr, end='')
        return exc.returncode


if __name__ == '__main__':
    exit(main())
